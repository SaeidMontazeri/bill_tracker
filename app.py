# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'GUI.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import path_files 
import pdfplumber
import pandas as pd
import openpyxl


class Ui_Dialog(object):
    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(776, 457)
        self.graphicsView = QtWidgets.QGraphicsView(Dialog)
        self.graphicsView.setGeometry(QtCore.QRect(0, 0, 161, 181))
        self.graphicsView.setObjectName("graphicsView")
        image_path = 'ISTT.png'
        image = QtGui.QPixmap(image_path)
        scene = QtWidgets.QGraphicsScene()
        image_item = QtWidgets.QGraphicsPixmapItem(image)
        scene.addItem(image_item)
        image_item.setScale(0.31)
        self.graphicsView.setScene(scene)
        #self.graphicsView.fitInView(scene.sceneRect(),QtCore.Qt.KeepAspectRatio)
        self.run = QtWidgets.QPushButton(Dialog)
        self.run.setGeometry(QtCore.QRect(340, 370, 93, 28))
        self.run.setObjectName("run")
        self.label = QtWidgets.QLabel(Dialog)
        self.label.setGeometry(QtCore.QRect(230, -10, 531, 81))
        font = QtGui.QFont()
        font.setPointSize(18)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(Dialog)
        self.label_2.setGeometry(QtCore.QRect(150, 240, 81, 21))
        self.label_2.setObjectName("label_2")
        self.add_bill = QtWidgets.QPushButton(Dialog)
        self.add_bill.setGeometry(QtCore.QRect(90, 240, 51, 28))
        self.add_bill.setObjectName("add_bill")
        self.reset_bill = QtWidgets.QPushButton(Dialog)
        self.reset_bill.setGeometry(QtCore.QRect(30, 240, 51, 28))
        self.reset_bill.setObjectName("reset_bill")
        self.label_3 = QtWidgets.QLabel(Dialog)
        self.label_3.setGeometry(QtCore.QRect(400, 240, 81, 21))
        self.label_3.setObjectName("label_3")
        self.add_numbers = QtWidgets.QPushButton(Dialog)
        self.add_numbers.setGeometry(QtCore.QRect(340, 240, 51, 28))
        self.add_numbers.setObjectName("add_numbers")
        self.reset_numbers = QtWidgets.QPushButton(Dialog)
        self.reset_numbers.setGeometry(QtCore.QRect(280, 240, 51, 28))
        self.reset_numbers.setObjectName("reset_numbers")
        self.label_4 = QtWidgets.QLabel(Dialog)
        self.label_4.setGeometry(QtCore.QRect(650, 240, 81, 21))
        self.label_4.setObjectName("label_4")
        self.add_mali = QtWidgets.QPushButton(Dialog)
        self.add_mali.setGeometry(QtCore.QRect(610, 240, 51, 28))
        self.add_mali.setFlat(False)
        self.add_mali.setObjectName("add_mali")
        self.reset_mali = QtWidgets.QPushButton(Dialog)
        self.reset_mali.setGeometry(QtCore.QRect(550, 240, 51, 28))
        self.reset_mali.setObjectName("reset_mali")
        self.textBrowser_bill = QtWidgets.QTextBrowser(Dialog)
        self.textBrowser_bill.setGeometry(QtCore.QRect(30, 280, 201, 71))
        self.textBrowser_bill.setObjectName("textBrowser_bill")
        self.textBrowser_numbers = QtWidgets.QTextBrowser(Dialog)
        self.textBrowser_numbers.setGeometry(QtCore.QRect(280, 280, 201, 71))
        self.textBrowser_numbers.setObjectName("textBrowser_numbers")
        self.textBrowser_mali = QtWidgets.QTextBrowser(Dialog)
        self.textBrowser_mali.setGeometry(QtCore.QRect(540, 280, 201, 71))
        self.textBrowser_mali.setObjectName("textBrowser_mali")
        self.label_5 = QtWidgets.QLabel(Dialog)
        self.label_5.setGeometry(QtCore.QRect(560, 40, 201, 71))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_5.setFont(font)
        self.label_5.setObjectName("label_5")

        self.retranslateUi(Dialog)
        self.run.clicked.connect(self.code_process) # type: ignore
        self.add_mali.clicked.connect(self.add_mali_process) # type: ignore
        self.add_numbers.clicked.connect(self.add_numbers_process) # type: ignore
        self.add_bill.clicked.connect(self.add_bill_process) # type: ignore
        self.reset_bill.clicked.connect(self.reset_bill_process) # type: ignore
        self.reset_mali.clicked.connect(self.reset_mali_process) # type: ignore
        self.reset_numbers.clicked.connect(self.reset_numbers_process) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(Dialog)

    def add_mali_process(self):
        optins = QtWidgets.QFileDialog.Options()
        file_path, _ = QtWidgets.QFileDialog.getOpenFileName(None,'select a file to import','', 'All Files (*)',options=optins)
        file_name = file_path.split('/')[-1]
        if file_path:
            path_files.mali_address = file_path
            self.textBrowser_mali.setPlainText(file_name + ' loaded')

            
            

    def add_numbers_process(self):
        optins = QtWidgets.QFileDialog.Options()
        file_path, _ = QtWidgets.QFileDialog.getOpenFileName(None,'select a file to import','', 'All Files (*)',options=optins)
        file_name = file_path.split('/')[-1]
        if file_path:
            path_files.numbers_address = file_path
            self.textBrowser_numbers.setPlainText(file_name + ' loaded')

    def add_bill_process(self):
        optins = QtWidgets.QFileDialog.Options()
        file_path, _ = QtWidgets.QFileDialog.getOpenFileName(None,'select a file to import','', 'All Files (*)',options=optins)
        file_name = file_path.split('/')[-1]
        if file_path:
            path_files.bill_addresses.append(file_path)
            current_text = self.textBrowser_bill.toPlainText()
            updated_text = current_text + file_name + ' loaded' + '\n'
            self.textBrowser_bill.setPlainText(updated_text)
    
    def reset_mali_process(self):
        self.textBrowser_mali.clear()
        path_files.mali_address = ''

    def reset_numbers_process(self):
        self.textBrowser_numbers.clear()
        path_files.numbers_address = ''

    def reset_bill_process(self):
        self.textBrowser_bill.clear()
        path_files.bill_addresses = []
    
    def pdf_to_dictionary(self,filepath,number_usage):
    
        '''convert pdf to txt'''
        txt = ''
        with pdfplumber.open(filepath) as pdf:
            for page in pdf.pages:
                txt += page.extract_text()
        
        '''delete useless data'''
        file_lines = txt.split('\n')
        sep = '\n'.join(file_lines[1:12])
        data = txt.split(sep)
        txt = ''.join(data)
    
        '''convert txt to dictionary'''
        file_lines = txt.split('\n')
        ending_point = 'ﻞﮐ ﻊﻤﺟ'
        for line in file_lines:
            if ending_point in line:
                break
            else:
                sections = line.split(' ')
                if len(sections) > 12:
                    usage = int(''.join(sections[0].split(',')))
                    number_usage[sections[12][2:]] = usage
        return number_usage
    
    def code_process(self):
        number_usage = {}
        bill_addresses = path_files.bill_addresses
        for filepath in bill_addresses:
            number_usage = self.pdf_to_dictionary(filepath,number_usage)

        pathfile_mali = path_files.mali_address
        pathfile_numbers = path_files.numbers_address
        df_mali = pd.read_excel(pathfile_mali)
        n_rows_mali, n_columns_mali = df_mali.shape

        df_numbers = pd.read_excel(pathfile_numbers)
        n_rows_numbers, n_columns_numbers = df_numbers.shape

        wb_mali = openpyxl.load_workbook(pathfile_mali)
        sheet_mali = wb_mali.active
        
        for n_row_mali in range(n_rows_mali):
            if df_mali.iloc[n_row_mali,15] == 120317:
                company_name  = df_mali.iloc[n_row_mali,4]
                company_id = df_mali.iloc[n_row_mali,6]
                numbers = []
                usage = 0
                for n_row_numbers in range(n_rows_numbers):
                    if df_numbers.iloc[n_row_numbers,4] == company_name:
                        numbers.append(str(df_numbers.iloc[n_row_numbers,1]))
                for number in numbers:
                    usage += number_usage.get(number,0)
                point_cell_mali = 'Q' +str(n_row_mali+2)
                sheet_mali[point_cell_mali] = usage
        wb_mali.save(pathfile_mali)
        print('DONE!')
        

    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Dialog"))
        self.run.setText(_translate("Dialog", "Run"))
        self.label.setText(_translate("Dialog", "سیستم صدور قبوض تلفن واحد های فناور"))
        self.label_2.setText(_translate("Dialog", "قبض مخابرات"))
        self.add_bill.setText(_translate("Dialog", "Add"))
        self.reset_bill.setText(_translate("Dialog", "Reset"))
        self.label_3.setText(_translate("Dialog", "واگذاری خطوط"))
        self.add_numbers.setText(_translate("Dialog", "Add"))
        self.reset_numbers.setText(_translate("Dialog", "Reset"))
        self.label_4.setText(_translate("Dialog", "مالی جدید"))
        self.add_mali.setText(_translate("Dialog", "Add"))
        self.reset_mali.setText(_translate("Dialog", "Reset"))
        self.label_5.setText(_translate("Dialog", "(گروه فناوری اطلاعات)"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Dialog = QtWidgets.QDialog()
    ui = Ui_Dialog()
    ui.setupUi(Dialog)
    Dialog.show()
    sys.exit(app.exec_())
